apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dev-pipeline
spec:
  params:
    - name: imageTag
      type: string
      description: The image tag
  workspaces:
    - name: git-source
  tasks:
    - name: clone-git-source
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: "{{FORKED_REPO}}"
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
        - name: revision
          value: "{{BRANCH}}"
      workspaces:
        - name: output
          workspace: git-source

    # MQ build in dev namespace
    - name: build-mq
      runAfter:
        - clone-git-source
      taskRef:
        name: build-task
      params:
        - name: imageName
          value: "mq-ddd"
        - name: imageTag
          value: "latest"
        - name: dockerfile
          value: "MQ.Dockerfile"
        - name: contextPath
          value: ""
        - name: pvc
          value: "buildah-mq"
      workspaces:
        - name: git-source
          workspace: git-source

    # MQ deploy in dev namespace
    - name: deploy-wait-mq
      runAfter:
        - build-mq
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "latest"
        - name: imageName
          value: "mq-ddd"
        - name: releaseName
          value: "mq-ddd-qm"
        - name: releaseScript
          value: release-mq.sh
        - name: namespace
          value: "{{NAMESPACE}}"
      workspaces:
        - name: git-source
          workspace: git-source

    # build ace in dev namespace
    - name: build-ace-sre
      runAfter:
        - clone-git-source
      taskRef:
        name: build-task
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ace-api"
        - name: dockerfile
          value: "ACE-SRE.Dockerfile"
        - name: contextPath
          value: "Bar_files/ace-sre"
        - name: pvc
          value: "buildah-ace-api"
      workspaces:
        - name: git-source
          workspace: git-source

    # deploy ace sre in dev namespace
    - name: deploy-wait-ace-sre
      runAfter:
        - build-ace-sre
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ace-sre"
        - name: releaseName
          value: "ace-sre-rsrv"
        - name: releaseScript
          value: release-ace-integration-server.sh
        - name: namespace
          value: "{{NAMESPACE}}"
      workspaces:
        - name: git-source
          workspace: git-source